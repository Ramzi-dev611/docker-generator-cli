FROM python:{{{python_version}}}-alpine as builder

WORKDIR /app

RUN apk update && apk add --no-cache \
    build-base \
    postgresql-dev \
    && rm -rf /var/cache/apk/*

COPY requirements.txt /app/
RUN pip install --upgrade pip && pip install --no-cache-dir -r requirements.txt
COPY . /app/ 

# Stage 2: Production image
FROM python:{{{python_version}}}-alpine

WORKDIR /app

RUN adduser -D user
USER user

COPY --from=builder /usr/local/lib/python3.9/site-packages/ /usr/local/lib/python3.9/site-packages/
COPY --from=builder /app /app

ENV PYTHONUNBUFFERED 1
ENV DJANGO_SETTINGS_MODULE=myproject.settings.prod
{{{environment_variables}}}

RUN python manage.py collectstatic --noinput

# Expose the port that Gunicorn will run on
EXPOSE {{{port}}}

# Run Gunicorn
CMD ["gunicorn", "--bind", "0.0.0.0:{{{port}}}", "myproject.wsgi:application"]
